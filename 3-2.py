# 3-2 큰 수의 법칙

# 다양한 수로 이루어진 배열이 있을때 주어진 수들을 M번 더하여 가장 큰수를 만들어야 함
# 단, 배열의 특정한 인덱스(번호)에 해당하는 수가 연속해서 K번을 초과하여 더해질 수 없음

# N ( 2 <= N <= 1,000 )     배열의 크기
# M ( 1 <= M <= 10,000 )    숫자가 더해지는 횟수
# K ( 1 <= K <= 10,000 )    최대 연속할 수 있는 수

# 입력으로 주어지는 K는 항상 M보다 작거나 같다.

# 입력 예시
# 5 8 3
# 2 4 5 4 6

# 출력 예시
# 46


#################################################
## 예시
#################################################

# # N, M, K를 공백으로 구분하여 입력받기
# n, m, k = map(int, input().split())
#
# # N개의 수를 공백으로 구분하여 입력받기
# data = list(map(int, input().split()))
#
# data.sort() # 입력받은 수들 정렬하기
# first = data[n-1] # 가장 큰 수
# second = data[n-2] # 두 번째로 큰 수
#
# result = 0
#
# while True:
#     for i in range(k):  # 가장 큰 수를 K번 더하기
#         if m == 0:      # m이 0이라면 반복문 탈출
#             break
#         result += first
#         m -= 1          # 더할 때마다 1씩 빼기
#     if m == 0:          # m이 0이라면 반복문 탈출
#         break
#     result += second    # 두 번째로 큰 수를 한 번 더하기
#     m -= 1              # 더할 때마다 1씩 빼기
#
# print(result)           # 최종 답안 출력


#################################################
## 3-2
#################################################

# N ( 2 <= N <= 1,000 )     배열의 크기
# M ( 1 <= M <= 10,000 )    숫자가 더해지는 횟수
# K ( 1 <= K <= 10,000 )    최대 연속할 수 있는 수

# N, M, K를 공백으로 구분하여 입력받기
n, m, k = map(int, input().split())

# N개의 수를 공백으로 구분하여 입력받기
data = list(map(int, input().split()))

data.sort() # 입력받은 수들 정렬하기
first = data[n - 1] # 가장 큰 수
second = data[n - 2] # 두 번째로 큰 수

# 가장 큰 수가 더해지는 횟수 계산
count = int(m / (k + 1)) * k
count += m % (k + 1)

result = 0
result += (count) * first # 가장 큰 수 더하기
result += (m - count) * second

print(result)

# 8 / 4 * 3 = 6
#
# result1 = 6 * 6 = 36
# result2 = (8 - 6) * 5 = 10
# => 46


